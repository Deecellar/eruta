#ifndef SILLI_PROTO_H
#define SILLI_PROTO_H
/*
This file was autogenerated from src/silli.c
by bin/genproto
Please do not hand edit.
*/

/** Silli is a simple singly linked list. It does NOT own it's elements, 
and they must be erased manually before erasing the list. */
struct Silli_;
typedef struct Silli_ Silli;

/***/
Silli * silli_new(void * data);

/** Frees the linked list and uses the given destructor to clean up the data 
too. Does not clean the data in the list if destroy is NULL. */
Silli * silli_free_destroy(Silli * self, MemDestructor * destroy);

/** Frees the whole linked list from self on (and all folllowing nodes) 
but does NOT free it's elements. */
Silli * silli_free(Silli * self);

/** Returns the next item in the singly linked list. */
Silli * silli_next(Silli * self);

/** Returns the data for this node of the singly linked list. */
Silli * silli_data(Silli * self);

/** Inserts the node two after th node one in the singly linked list. 
returns one. Does nothing if one is NULL. If two is null, the list is 
truncated mercilessly without even calling silli_free on it.
*/
Silli * silli_add(Silli * one, Silli * two);

/** Iterates over the list using the AllData interface callback */
Silli * silli_all(Silli * self, AllData * callback, void * extra);

/** Tries to find to_find using the AllCompare callback. */
Silli * silli_find(Silli * self, AllCompare * callback, void * to_find);

#endif // SILLI_PROTO_H


#ifndef TILE_PROTO_H
#define TILE_PROTO_H
/*
This file was autogenerated from src/tile.c
by bin/genproto
Please do not hand edit.
*/

/**
* A tile set 
*/
struct Tileset_;
typedef struct Tileset_ Tileset;

/** 
* A single tile from a tile map.
* Tiles can be animated. This works like this: a tile has an animation
* pointer and offset which points to the next tile to be drawn in the tileset.
*
* A tile can only hold up to TILE_FRAMES tiles pointers in itself.
*/
struct Tile_;
typedef struct Tile_ Tile;

/** Cleans up a tileset, and empties it.  */
void tileset_done(Tileset * set);

/** Deallocates a tileset */
void tileset_free(Tileset * set);

/** Retuns the amount of tiles in the tile set. */
int tileset_size(Tileset * set);

/** Initializes a given tileset with a given bitmap tile sheet */
Tileset * tileset_init(Tileset * set, Image * sheet);

/** Creates a new tileset with the given tile sheet image. */
Tileset * tileset_new(Image * sheet);

/** Recalculates the tile's position (now) in it's tile set. */
Tile * tile_recalculate(Tile * tile);

/** Initializes a tile to belong to a given tile set. */
Tile * tile_init(Tile * tile, Tileset * set, int index);

/** Gets a tile from a tile set by it's tile id. **/ 
Tile * tileset_get(Tileset * set, int index);

/** Sets the animation parameter of this tile */
Tile * tile_anim_(Tile * tile, int anim);

/** Gets the animation parameter of this tile, or 0 if NULL */
int tile_anim(Tile * tile);

/** Sets the wait parameter of this tile */
Tile * tile_wait_(Tile * tile, int wait);

/** Gets the wait parameter of this tile, or -1 if NULL */
int tile_wair(Tile * tile);

/** Gets the value of the flags of a tile. */
int tile_flags(Tile * tile);

/** Sets the flags on a tile. */
Tile * tile_flags_(Tile * tile, int flags);

/** Sets a single flag on a tile. */
Tile * tile_setflag(Tile * tile, int flag);

/** Removes a single flag on a tile. */
Tile * tile_unflag(Tile * tile, int flag);

/** Checks a single flag on a tile. */
int tile_isflag(Tile * tile, int flag);

/** Sets a tile's flags from a property string.
* This uses an internal lookup table.
*/
Tile * tile_property_(Tile * tile, char * property);

/** Rewinds a tile's animations. */
void tile_rewindanime(Tile * tile);

/** Updates a tile to animate it. Ignores wait for now. */
void tile_update(Tile * tile);

/** Updates all tiles in a tile set so they all get animated. */
void tileset_update(Tileset * set);

/** Draw a tile to the current active drawing target at the
given coordinates */
void tile_draw(Tile * tile, int x, int y);

/** Tile's index. Returns -1 if tile is NULL; */
int tile_index(Tile * tile); 

/**  Information about the tile's properties. Return -1 if tile is NULL. */
int tile_kind(Tile * tile); 

#endif // TILE_PROTO_H


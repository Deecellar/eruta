#ifndef EFFECT_PROTO_H
#define EFFECT_PROTO_H
/*
This file was autogenerated from src/effect.c
by bin/genproto on 2012-01-21 18:34:10 +0100
Please do not hand edit.
*/

/** Particle and effect engine for all sorts of glitzy effects. :) 
**/
#include "eruta.h"


/**
* An effect is a localized graphical effect 
*/
struct Effect_;
typedef struct Effect_ Effect;

/**
* A particle is a single graphical element (that may be a point or whatever) 
* which effects use to visualize themselves. 
*/
struct Particle_;
typedef struct Particle_ Particle;

/**
* Effects holds all the data for the visual effects engine.
*/
struct Effects_;
typedef struct Effects_ Effects;

/**
* A Drop is a 
*/
struct GyDrop_;
typedef struct GyDrop_ GyDrop;

/** Returns TRUE if this drop is idle(unused) or NULL, FALSE if not. */
int gydrop_idle(GyDrop * drop); 

/** Returns TRUE if this drop is still active, FALSE if not. */
int gydrop_active(GyDrop * drop); 

/** Deactivates a drop. */
void gydrop_disable(GyDrop * drop);

/** Deactivates a drop if it is of the given kind. */
void gydrop_disablekind(GyDrop * drop, int kind);

/** Initializes a drop with info from a Well */
GyDrop * gydrop_initwell(GyDrop * drop, GyFlow * flow, GyWell *well)
;

/**
* Gets the next idle (unused) drop from the particle engine. 
* Returns NULL if no idle drop is available. 
*/
GyDrop * gyflow_idle(GyFlow * flow);

/**
* Activates amount Drops (particles) in the GyFlow flow. 
* The particle will be of kind kind, and will be placed, depending on the 
* kind, at x a,d y, and displayed using given color, image or text 
*/
GyFlow * gyflow_activate(GyFlow * flow, 
  int amount, int kind, int x, int y, GyColor color, 
  GyImage * im, char * text);

/**
* Deactivates all Drops of the given kind of effect.
*/
GyFlow * gyflow_disablekind(GyFlow * flow, int kind);  

#endif // EFFECT_PROTO_H


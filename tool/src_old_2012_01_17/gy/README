Gy is is a simple, fast, cross platform game library targeted at 2D games, 
written in plain C. For now, it uses SDL as a backend, but that might change 
later to use other back-ends like opengl, openvg, etc... It's goals are: 

* Targeted to make writing 2D games as easy as possible.
* A simple API, that hides the details as much as possible.
* Fast, giving good performance everywhere possible.
* Cross platform. Enough said.
* Complete. All you need to write games.
* Release under Zlib license (or similar permissive).
* Easy to embed in other languages such as Ruby. 


Rationale for creating Gy for use with the Eruta project:
* SDL by itself lacks some functionality, especially with regards to drawing.
  It's also not that easy to use in some cases.
   
* Reduce external dependencies as much as possible. No need for drawing 
  libraries, as Gy has drawing built-in.
   
* It makes it possible to switch to a different backend (Allegro, SDL 1.3, ...)
  without too much of a hassle.
 
* The crucial point here is: performance, is it worth all the extra work? If it 
  was a web application, then I'd say : no. But to allow people with old 
  computers or nettops to play my games: I say: yes, it matters.

Ideas: 

How about using OpenGL for acelleration? The problem is that on Linux, OpenGL
is not always accelerated on older computers or nettops. Often it is a software
Mesa3D which is /a lot slower/ than straight SDL software rendering functions. 
Allegro 5 suffers from this problem as well. I hope SDL 1.3 will solve the 
problem for me whenever that's ready for prime time.


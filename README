                     _____           _        
                    |  ___|         | |       
                    | |__ _ __ _   _| |_ __ _ 
                    |  __| '__| | | | __/ _` |
                    | |__| |  | |_| | || (_| |
                    \____/_|   \__,_|\__\__,_|



Eruta us a futuristic jRPG under development.

Requirements:
* OS: Linux for now. Windows port is under development. OSX may work too.
* Allegro 5.0.x
* Chipmunk 6.x,
* libxml2 (www.xmlsoft.org)
* mruby (latest github version) 
* For testing and compilation: cmake, cfunction (see vendor dir) and valgrind.
* For map editing: tiled (www.mapeditor.org)
* For some of the tools and continuous testing: Ruby, watchr.
 
Installation:

You have to make sure that you have all the requirements.  On Linux 
distributitions like Ubuntu, make sure that the development packages for all 
requirements are installed. Then do on the command line: 

cmake . ; make

Or if you want to build with Ninja, use the latest version of cmake and go
cmake -G ninja . ; ninja 

How to try it:

Run bin/eruta from the project's main directory.
Expect to be underwhelmed for now. :-)

How to develop using the contious testing script:

Use the supplied watchr script like this:
watchr tool/watchr/eruta_watchr.rb

Every time you change a c file or header, the matching
test will be compiled though cmake and make, and 
will be run. This does compile all C files of eruta,
so it may be a bit slow at times.

How to generate developer's documentation:
Use naturaldocs. 


License: 

Eruta is copyright (C)
2007-2012 Beoran beoran@rubyforge.org. 
2012 com64 (music files in data/music/*_com64.ogg)

Redistribution and use in source and binary forms, with or without modification, 
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, 
   this list of conditions and the following disclaimer.
   
2. Redistributions in binary form must reproduce the above copyright notice, 
   this list of conditions and the following disclaimer in the documentation 
   and/or other materials provided with the distribution.
   
3. Redistributions in any form must be accompanied by information on how to 
   obtain complete source code for the Eruta software and any accompanying 
   software that uses the Eruta software. The source code must either be 
   included in the distribution or be available for no more than the cost of 
   distribution plus a nominal fee, and must be freely redistributable under 
   reasonable conditions. For an executable file, complete source code means 
   the source code for all modules it contains. It does not include source code 
   for modules or files that typically accompany the major components of the 
   operating system on which the executable file runs.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT, ARE 
DISCLAIMED. IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

As you can see, above, Eruta is licenced under a "Sleepycat license", which is 
GPL compatible, but much shorter and easier to read. Basically you're allowed 
to use the Eruta as you like. However, if you make your own game with Eruta's 
sources, you'll have to make the sources of your program freely available and 
redistributable as well. If you don't like these terms, contact me for making 
different arrangments. :)

Credits and third party licenses: 

File:
ext/gari/test/test_music.ogg, data/music/musictest.ogg
Original title: : Town in ruins loop
Artist: Brandon Morris
License: CC-BY 3.0

data/font/Tuffy.ttf
Tuffy fonts License: 
I have placed these fonts in the Public Domain. This is all 100% my
own work. Usage is totally unrestricted. If you want to make
derivative works for any purpose, please go ahead.

-Thatcher Ulrich <tu@tulrich.com> http://tulrich.com

data/font/GranaPadano.ttf:  licensed under the Open Font License (OFL). Contributors:
Daniel Johnson (font maintainer)
il.basso.buffo at gmail dot com
http://io.debian.net/~danielj/

data/image/ulpcss: See README and AUTHORS in that directory. 
These images are temporary open source placeholders for the game sprites.

Thanks to the following people for their suggestions:

Alexbond45, LunarKnite, Mikka, Sagephoenix.

 
Remarks for developers:

bin/mkproto is an automatic function prototype extraction tool that is 
no longer used due to it being more hassle than help. 

When a new .c file is needed, use the bin/newmodule tool like this
bin/newmodule bar 
and automatically, empty src/bar.c and include/bar.h will be generated.

As for why I use plain C and not, say C++: it's to keep the code simple, tight 
and focused, and easy to interface with the Lua scripts. C is a very simple
language, but it can do anything. And to save time, quite a bit of the 
programming will happen on the mruby side. Finally, plain C is easier to wrap 
and use in mruby.

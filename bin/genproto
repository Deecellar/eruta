#!/usr/bin/env ruby
#
# Genproto by beoran 2012. Licensed under a Sleepycat-style license.
# Genproto generates function prototypes from C files
# but only for prototype preceded by a /** comment.
# The comment is included verbatim.
# It also generates forward declarations for structs if they are preceded
# by a /** comment.
# A comment that ends in **/ will be included verbatim, but will not
# generate any prototypes.
# functions that are nort preceded by a /** comment are ignored.
#
#
fin       = File.open(ARGV[0], 'rt')
inproto   = nil;
instruct  = nil;
incomm    = nil; 
STRUCT_RE = %r{struct ([A-Za-z0-9_]+)}
COMM_RE   = %r(\/\*\*)
FUNC_RE   = %r(\{)
COMMEND_RE= %r(\*\*\/)
macro     =  File.basename(ARGV[0]).gsub('.c', '_PROTO_H').upcase
puts "#ifndef #{macro}"
puts "#define #{macro}"
puts "/*\nThis file was autogenerated from #{ARGV[0]}\nby bin/genproto on #{Time.now}\nPlease do not hand edit.\n*/\n\n"
fin.each_line do |line|
  if incomm
    commend = line.match(COMMEND_RE)
    done    = line.match(FUNC_RE)
    struct  = line.match(STRUCT_RE)    
    if struct
      name = struct[1]
      defi = name.chop
      puts "struct #{name};"
      puts "typedef struct #{name} #{defi};"
      puts 
    else
      if done
        if commend
          puts line
        else  
          puts line.gsub(/[ ]*{/, ';')
          puts 
        end
      else
        printf line
      end
    end
    if done
      incomm = nil
    end
  else
     incomm = line.match(COMM_RE)
     if incomm
      printf(line)
     end
  end  
end

puts "#endif // #{macro}"
puts

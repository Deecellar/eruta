#!/usr/bin/env ruby

def bin2c
  unless ARGV[0]
    puts "bin2c filename"
    return 1
  end
  inname    = ARGV[0]
  outfile   = $stdout
  data      = IO.read(inname, :mode => 'rb')
  name      = inname.gsub(/[^A-Za-z0-9_]+/,'_')   
  size      = data.size
  constname = name.upcase + '_SIZE'
  varname   = name.downcase
  outfile.printf("#define %s %d\n", constname, size)
  outfile.printf("const int %s_size = %s;\n", varname, constname)  
  outfile.printf("const unsigned char * %s = \n", name.downcase, constname)
  step      = 0 
  data.each_byte do |b| 
    outfile.printf('"')  if(step == 0)        
    outfile.printf("\\x%s",b.to_s(16)) 
    step+=1 
    if step >= 40 
      step = 0 
      outfile.printf("\"\n")
    end
  end    
  outfile.printf("\"") unless step == 0
  outfile.printf("\n;\n") 
  if (outfile != $stdout) 
    outfile.close
  end  
  return 0
end

exit(bin2c)

